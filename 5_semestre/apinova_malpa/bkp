router.post('/login', [
    body('email').isEmail().withMessage('Forneça um e-mail válido.'),
    body('senha').exists().withMessage('Senha é necessária.')
], async (req, res) => {
    console.log(req.body);
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(400).json({ errors: errors.array() });
    }

    const { email, senha } = req.body;
    const sqlSelect = "SELECT * FROM usuarios WHERE email = ?";
    db.query(sqlSelect, [email], async (err, results) => {
        if (err) {
            return res.status(500).json({ error: err.message });
        }
        if (results.length === 0) {
            return res.status(404).json({ message: "Usuário não encontrado!" });
        }
        const user = results[0];

        const isMatch = await bcrypt.compare(senha, user.senha);
        if (!isMatch) {
            return res.status(400).json({ message: "Senha incorreta!" });
        }

        const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: '1h' });
        res.status(200).json({ message: "Login bem-sucedido!", token });
    });
});


/// registro aparentemente com erro